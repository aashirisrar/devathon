// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  username       String?   @unique

  accounts Account[]
  options  Option[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Option {
  id                      String   @id @default(auto()) @map("_id") @db.ObjectId
  navbar                  Boolean? @default(true)
  navbarLogoText          String?
  navbarLinkText1         String?
  navbarLink1             String?
  navbarLinkText2         String?
  navbarLink2             String?
  navbarLinkText3         String?
  navbarLink3             String?
  resumeText              String?
  resumeLink              String?
  hero                    Boolean? @default(true)
  heroTagText             String?
  heroPrimaryButtonText   String?
  heroPrimaryButtonLink   String?
  heroSecondaryButtonText String?
  heroSecondaryButtonLink String?
  heroText                String?
  heroDescriptionText     String?
  heroImage               String?
  project                 Boolean? @default(true)
  projectSectionTagText   String?
  projectSectionHeading   String?
  projectSectionBodyText  String?
  projectText1            String?
  projectBody1            String?
  projectLink1            String?
  projectImage1           String?
  projectText2            String?
  projectBody2            String?
  projectLink2            String?
  projectImage2           String?
  footer                  Boolean? @default(true)
  footerText              String?
  footerBodyText          String?
  footerLinkText1         String?
  footerLink1             String?
  footerLinkText2         String?
  footerLink2             String?
  footerLinkText3         String?
  footerLink3             String?
  footerCopyrightText     String?
  userId                  String   @unique @db.ObjectId
  theme                   String?  @default("Default")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSubscription {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscritionId    String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}
